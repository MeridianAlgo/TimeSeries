/**
 * Technical Indicators
 *
 * Comprehensive collection of technical analysis indicators for financial markets.
 */
import { MarketData } from '../types/MarketData';
import { MACDResult, BollingerBandsResult, StochasticResult } from '../types/Features';
/**
 * Technical indicator calculations
 */
export declare class TechnicalIndicators {
    /**
     * Simple Moving Average (SMA)
     */
    static sma(data: number[], period: number): number[];
    /**
     * Exponential Moving Average (EMA)
     */
    static ema(data: number[], period: number): number[];
    /**
     * Weighted Moving Average (WMA)
     */
    static wma(data: number[], period: number): number[];
    /**
     * Relative Strength Index (RSI)
     */
    static rsi(data: number[], period?: number): number[];
    /**
     * Moving Average Convergence Divergence (MACD)
     */
    static macd(data: number[], fastPeriod?: number, slowPeriod?: number, signalPeriod?: number): MACDResult;
    /**
     * Bollinger Bands
     */
    static bollingerBands(data: number[], period?: number, multiplier?: number): BollingerBandsResult;
    /**
     * Stochastic Oscillator
     */
    static stochastic(high: number[], low: number[], close: number[], kPeriod?: number, dPeriod?: number): StochasticResult;
    /**
     * Williams %R
     */
    static williamsR(high: number[], low: number[], close: number[], period?: number): number[];
    /**
     * Commodity Channel Index (CCI)
     */
    static cci(high: number[], low: number[], close: number[], period?: number): number[];
    /**
     * Average True Range (ATR)
     */
    static atr(high: number[], low: number[], close: number[], period?: number): number[];
    /**
     * Average Directional Index (ADX)
     */
    static adx(high: number[], low: number[], close: number[], period?: number): {
        adx: number[];
        plusDI: number[];
        minusDI: number[];
    };
    /**
     * Money Flow Index (MFI)
     */
    static mfi(high: number[], low: number[], close: number[], volume: number[], period?: number): number[];
    /**
     * On-Balance Volume (OBV)
     */
    static obv(close: number[], volume: number[]): number[];
    /**
     * Volume Weighted Average Price (VWAP)
     */
    static vwap(high: number[], low: number[], close: number[], volume: number[]): number[];
    /**
     * Momentum
     */
    static momentum(data: number[], period?: number): number[];
    /**
     * Rate of Change (ROC)
     */
    static roc(data: number[], period?: number): number[];
    /**
     * Standard Deviation
     */
    static standardDeviation(data: number[], period: number): number[];
    /**
     * Variance
     */
    static variance(data: number[], period: number): number[];
    /**
     * Linear Regression Slope
     */
    static linearRegressionSlope(data: number[], period: number): number[];
    /**
     * Pivot Points (Standard)
     */
    static pivotPoints(high: number, low: number, close: number): {
        pivot: number;
        r1: number;
        r2: number;
        r3: number;
        s1: number;
        s2: number;
        s3: number;
    };
    /**
     * Helper method to extract prices from MarketData array
     */
    static extractPrices(data: MarketData[], priceType: 'open' | 'high' | 'low' | 'close' | 'volume'): number[];
    /**
     * Helper method to extract OHLCV arrays from MarketData
     */
    static extractOHLCV(data: MarketData[]): {
        open: number[];
        high: number[];
        low: number[];
        close: number[];
        volume: number[];
    };
}
//# sourceMappingURL=TechnicalIndicators.d.ts.map