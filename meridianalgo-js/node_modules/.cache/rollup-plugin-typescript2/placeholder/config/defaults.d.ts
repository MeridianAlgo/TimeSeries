/**
 * Default Configuration
 *
 * Default settings and constants for the MeridianAlgo-JS library.
 */
import { PredictorOptions } from '../types/Prediction';
import { FeatureOptions } from '../types/Features';
import { OptimizerOptions } from '../types/Portfolio';
/**
 * Default predictor configuration
 */
export declare const DEFAULT_PREDICTOR_OPTIONS: Required<PredictorOptions>;
/**
 * Default feature engineering configuration
 */
export declare const DEFAULT_FEATURE_OPTIONS: Required<FeatureOptions>;
/**
 * Default portfolio optimizer configuration
 */
export declare const DEFAULT_OPTIMIZER_OPTIONS: OptimizerOptions;
/**
 * Default library configuration
 */
export declare const DEFAULT_CONFIG: {
    predictor: Required<PredictorOptions>;
    features: Required<FeatureOptions>;
    optimizer: OptimizerOptions;
    performance: {
        enableParallelProcessing: boolean;
        maxWorkers: number;
        cacheSize: number;
        memoryLimit: number;
        enableProfiling: boolean;
    };
    validation: {
        strictMode: boolean;
        autoSanitize: boolean;
        warningsAsErrors: boolean;
    };
    logging: {
        level: string;
        enableConsole: boolean;
        enableFile: boolean;
        maxLogSize: number;
    };
};
/**
 * Mathematical constants
 */
export declare const MATH_CONSTANTS: {
    EPSILON: number;
    PI: number;
    E: number;
    GOLDEN_RATIO: number;
    SQRT_2: number;
    SQRT_PI: number;
};
/**
 * Financial constants
 */
export declare const FINANCIAL_CONSTANTS: {
    TRADING_DAYS_PER_YEAR: number;
    CALENDAR_DAYS_PER_YEAR: number;
    HOURS_PER_TRADING_DAY: number;
    MINUTES_PER_TRADING_DAY: number;
    SECONDS_PER_TRADING_DAY: number;
    US_TREASURY_10Y: number;
    US_TREASURY_3M: number;
    SP500_ANNUAL_RETURN: number;
    SP500_ANNUAL_VOLATILITY: number;
    OVERBOUGHT_RSI: number;
    OVERSOLD_RSI: number;
    HIGH_VOLATILITY_THRESHOLD: number;
    LOW_VOLATILITY_THRESHOLD: number;
};
/**
 * Data validation constants
 */
export declare const VALIDATION_CONSTANTS: {
    MIN_DATA_POINTS: number;
    MAX_MISSING_DATA_RATIO: number;
    MAX_OUTLIER_RATIO: number;
    MAX_DAILY_RETURN: number;
    MIN_PRICE: number;
    MAX_PRICE: number;
    MIN_VOLUME: number;
    MAX_VOLUME_SPIKE: number;
    MAX_TIME_GAP_HOURS: number;
    MIN_TIME_INTERVAL_MS: number;
};
/**
 * Performance benchmarks
 */
export declare const PERFORMANCE_BENCHMARKS: {
    FEATURE_GENERATION_TARGET: number;
    PREDICTION_TARGET: number;
    PORTFOLIO_OPTIMIZATION_TARGET: number;
    MAX_FEATURE_MATRIX_SIZE: number;
    MAX_MODEL_SIZE: number;
    MIN_PREDICTION_ACCURACY: number;
    TARGET_PREDICTION_ACCURACY: number;
    EXCELLENT_PREDICTION_ACCURACY: number;
};
/**
 * Error codes and messages
 */
export declare const ERROR_CODES: {
    INVALID_DATA: string;
    INSUFFICIENT_DATA: string;
    MISSING_DATA: string;
    MODEL_NOT_TRAINED: string;
    TRAINING_FAILED: string;
    PREDICTION_FAILED: string;
    INVALID_CONFIG: string;
    MISSING_CONFIG: string;
    MEMORY_LIMIT_EXCEEDED: string;
    TIMEOUT_EXCEEDED: string;
    OPTIMIZATION_FAILED: string;
    INVALID_WEIGHTS: string;
    CONSTRAINT_VIOLATION: string;
};
/**
 * Feature categories
 */
export declare const FEATURE_CATEGORIES: {
    TECHNICAL: string;
    STATISTICAL: string;
    MICROSTRUCTURE: string;
    VOLATILITY: string;
    HARMONIC: string;
    CROSS_ASSET: string;
    SENTIMENT: string;
    FUNDAMENTAL: string;
};
/**
 * Model types
 */
export declare const MODEL_TYPES: {
    RANDOM_FOREST: string;
    NEURAL_NETWORK: string;
    SVM: string;
    GRADIENT_BOOSTING: string;
    LINEAR_REGRESSION: string;
    ENSEMBLE: string;
};
/**
 * Optimization objectives
 */
export declare const OPTIMIZATION_OBJECTIVES: {
    SHARPE: string;
    RETURN: string;
    RISK: string;
    SORTINO: string;
    CALMAR: string;
    CUSTOM: string;
};
/**
 * Rebalancing frequencies
 */
export declare const REBALANCE_FREQUENCIES: {
    DAILY: string;
    WEEKLY: string;
    MONTHLY: string;
    QUARTERLY: string;
    ANNUALLY: string;
    THRESHOLD: string;
};
/**
 * Market regimes
 */
export declare const MARKET_REGIMES: {
    BULL: string;
    BEAR: string;
    SIDEWAYS: string;
    VOLATILE: string;
    CALM: string;
};
/**
 * Risk levels
 */
export declare const RISK_LEVELS: {
    LOW: string;
    MEDIUM: string;
    HIGH: string;
    EXTREME: string;
};
/**
 * Alert severities
 */
export declare const ALERT_SEVERITIES: {
    LOW: string;
    MEDIUM: string;
    HIGH: string;
    CRITICAL: string;
};
//# sourceMappingURL=defaults.d.ts.map